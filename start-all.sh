#!/bin/bash

# Script para iniciar todos os servi√ßos do Claude-Gemini Bridge
# Este script inicia o backend e o frontend de forma coordenada

echo "üöÄ Iniciando Claude-Gemini Bridge..."

# Verifica se node_modules existe
if [ ! -d "node_modules" ]; then
    echo "üì¶ Instalando depend√™ncias do backend..."
    npm install
fi

if [ ! -d "web/node_modules" ]; then
    echo "üì¶ Instalando depend√™ncias do frontend..."
    cd web && npm install && cd ..
fi

# Verifica se o c√≥digo est√° compilado
if [ ! -d "dist" ]; then
    echo "üî® Compilando c√≥digo TypeScript..."
    npm run build
fi

# Limpa arquivos de log antigos
echo "üßπ Limpando logs antigos..."
rm -f bridge-server.log
rm -f /tmp/server.log
rm -f /tmp/nextjs.log

# Mata processos anteriores se existirem
echo "üîÑ Parando processos anteriores..."
pkill -f "node dist/server/bridge-server.js" 2>/dev/null
pkill -f "next dev" 2>/dev/null

# Aguarda processos serem finalizados
sleep 2

# Inicia o servidor backend
echo "üñ•Ô∏è  Iniciando servidor backend na porta 3001..."
npm run server > /tmp/server.log 2>&1 &
BACKEND_PID=$!

# Aguarda o backend iniciar
echo "‚è≥ Aguardando backend iniciar..."
for i in {1..10}; do
    if curl -s http://localhost:3001/api/v1/health > /dev/null; then
        echo "‚úÖ Backend iniciado com sucesso!"
        break
    fi
    sleep 1
done

# Inicia o frontend
echo "üé® Iniciando frontend na porta 3000..."
cd web
npm run dev > /tmp/nextjs.log 2>&1 &
FRONTEND_PID=$!
cd ..

# Aguarda o frontend iniciar
echo "‚è≥ Aguardando frontend iniciar..."
for i in {1..15}; do
    if curl -s http://localhost:3000 > /dev/null; then
        echo "‚úÖ Frontend iniciado com sucesso!"
        break
    fi
    sleep 1
done

echo ""
echo "‚ú® Claude-Gemini Bridge est√° rodando!"
echo ""
echo "üìç URLs dispon√≠veis:"
echo "   - Frontend (Dashboard): http://localhost:3000"
echo "   - Backend API: http://localhost:3001/api/v1"
echo "   - WebSocket: ws://localhost:3001"
echo ""
echo "üìÑ Logs:"
echo "   - Backend: tail -f /tmp/server.log"
echo "   - Frontend: tail -f /tmp/nextjs.log"
echo ""
echo "üõë Para parar todos os servi√ßos, use: ./stop-all.sh"
echo ""
echo "Pressione Ctrl+C para parar todos os servi√ßos..."

# Fun√ß√£o para limpar ao sair
cleanup() {
    echo ""
    echo "üõë Parando todos os servi√ßos..."
    kill $BACKEND_PID 2>/dev/null
    kill $FRONTEND_PID 2>/dev/null
    pkill -f "node dist/server/bridge-server.js" 2>/dev/null
    pkill -f "next dev" 2>/dev/null
    echo "‚úÖ Todos os servi√ßos foram parados."
    exit 0
}

# Captura sinais de interrup√ß√£o
trap cleanup INT TERM

# Mant√©m o script rodando
wait
